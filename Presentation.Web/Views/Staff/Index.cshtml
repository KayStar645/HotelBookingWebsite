@using Core.Application.Responses
@using Core.Application.ViewModels.Staffs
@{
    var staffs = ViewBag.list as PaginatedResult<StaffVM>;
}

@section TitleHeader
{
	<div class="row">
		<div class="col-sm-10 mt-3">
			<h3 class="page-title mt-3">
				Nhân viên
			</h3>
			<div class="form-outline col-sm-6 p-0 mt-2" data-mdb-input-init>
				<input type="search" class="form-control" id="searchInput" placeholder="Tìm kiếm..." />
			</div>

		</div>
		<div class="col-sm-2 mt-5">
			<div class="text-right">
				<button type="button" id="createStaff" class="btn btn-primary"
						data-toggle="modal" data-target="#openPopupCreate">
					Thêm mới
				</button>
			</div>
		</div>
	</div>
}

<div class="card-body">
	<div class="table-responsive" style="overflow-y: auto;">
		<table id="tableSort" class="table table-hover table-center table-striped table-bordered">
			<thead>
				<tr>
					<th class="min-vw-10"></th>
					<th class="th-sm">Mã nhân viên</th>
					<th class="th-sm">Họ tên</th>
					<th class="text-center th-sm">Ngày sinh</th>
					<th class="text-center th-sm">Giới tính</th>
					<th class="th-sm">Địa chỉ</th>
					<th class="text-right">Số điện thoại</th>
					<th class="text-center">Trạng thái</th>
				</tr>
			</thead>
			<tbody id="table-body-staff">
				@if (staffs != null)
				{
					@foreach (var staff in staffs.Data)
					{
						<tr>
							<td class="text-center">
								<i class=" updatesStaff fa-regular fa-pen-to-square pe-3"
								   style="color:blue;cursor: pointer;"
								   data-toggle="modal" data-target="#openPopupCreate"></i>
								<i class="deletesStaff fa-solid fa-trash" style="color:red;cursor: pointer;"></i>
							</td>
							<td class="text-center d-none" data-id="@staff?.Id">@staff?.Id</td>
							<td class="text-nowrap">
								<div>@staff?.InternalCode</div>
							</td>
							<td class="text-nowrap">
								@staff?.Name
							</td>
							<td class="text-center">
								@((staff.DateOfBirth.HasValue ?
															staff.DateOfBirth.Value.ToString("dd/MM/yyyy") :
															"---"))
							</td>
							<td class="text-center">
								<div>@staff?.Gender</div>
							</td>
							<td class="text-nowrap">
								@staff?.Address
							</td>
							<td class="text-right">
								@staff?.Phone
							</td>
							<td class="text-center">

								@{
									var statusText = staff.IsDeleted == true
									? "<span class='badge badge-pill bg-danger inv-badge'>Đã xoá</span>"
									: "<span class='badge badge-pill bg-success inv-badge'>Hoạt động</span>";
								}

								@Html.Raw(statusText)
							</td>
						</tr>
					}
				}
			</tbody>
		</table>
	</div>
</div>

@* Phân trang *@
<div id="paginated" class="d-flex justify-content-end mt-4">
	<nav aria-label="Page navigation example">
		<ul class="pagination">
			@for (int i = 1; i <= staffs.Extra.TotalPages; i++)
			{
				<li class="page-item pageCurrent @(staffs.Extra.CurrentPage == i ? "active" : "")">
					<a class="page-link" data-page="@i">@i</a>
				</li>
			}
		</ul>
	</nav>
</div>


<!-- Modal -->
<div class="modal fade" id="openPopupCreate" tabindex="-1" role="dialog" aria-labelledby="modalTitle" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-lg" role="document">
		<div class="modal-content">
			<div class="modal-header bg-success">
				<h1 class="modal-title text-white font-weight-bold" id="modalTitle">Thêm nhân viên mới</h1>
				<button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">×</span>
				</button>
			</div>
			<div class="modal-body">
				<div class="row">
					<div class="col-lg-12">
						<form>
							<div class="row formtype">
								<div class="col-md-6 d-none">
									<div class="form-group">
										<input type="text" name="id" value="" />
									</div>
								</div>

								<div class="col-md-6">
									<div class="form-group">
										<label class="mb-2">Mã nhân viên</label>
										<input class="form-control" type="text" name="internalCode" />
										<span class="text-danger" id="internalCodeError"></span>
									</div>
								</div>

								<div class="col-md-6">
									<div class="form-group">
										<label class="mb-2">Họ tên</label>
										<input class="form-control" type="text" name="name" />
										<span class="text-danger" id="nameError"></span>
									</div>
								</div>

								<div class="col-md-6">
									<div class="form-group">
										<label class="mb-2">Ngày sinh</label>
										<div class="">
											<input type="date" class="form-control" placeholder="dd-mm-yyyy"
												   min="1950-01-01" max="2030-12-31" name="dateOfBirth" />
										</div>
										<span class="text-danger" id="dateOfBirthError"></span>
									</div>
								</div>

								<div class="col-md-6">
									<div class="form-group">
										<label class="mb-2">Giới tính</label>
										<select class="form-control" name="gender">
											<option selected>Nam</option>
											<option>Nữ</option>
											<option>Khác</option>
										</select>
										<span class="text-danger" id="genderError"></span>
									</div>
								</div>

								<div class="col-md-6">
									<div class="form-group">
										<label class="mb-2">Địa chỉ</label>
										<input class="form-control" type="text" name="address" />
										<span class="text-danger" id="addressError"></span>
									</div>
								</div>

								<div class="col-md-6">
									<div class="form-group">
										<label class="mb-2">Số điện thoại</label>
										<input class="form-control" type="text" name="phone" />
										<span class="text-danger" id="phoneError"></span>
									</div>
								</div>
							</div>
						</form>
					</div>
				</div>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
				<button type="button" id="createButton" class="btn btn-primary">Tạo mới</button>
				<button type="button" id="updateButton" class="btn btn-primary">Cập nhật</button>
			</div>
		</div>
	</div>
</div>

 @* ĐÂY LÀ JS *@

@* Khởi tạo biến *@
<script>
	var createOpen = document.getElementById("createStaff");
	var updateOpens = document.querySelectorAll(".updatesStaff");

	var internalCodeInput = $('input[name="internalCode"]');
	var nameInput = $('input[name="name"]');
	var dateOfBirthInput = $('input[name="dateOfBirth"]');
	var genderInput = $('select[name="gender"]');
	var addressInput = $('input[name="address"]');
	var phoneInput = $('input[name="phone"]');

	var searchTimer;

	var sorted_asc = true;

</script>

@* Tìm kiếm *@
<script>
	$(document).ready(function () {
		$('#searchInput').on('input', function () {
			clearTimeout(searchTimer);

			searchTimer = setTimeout(function () {
				performSearch();
			}, 600);
		});

		function performSearch() {
			var searchTerm = $('#searchInput').val();

			$.ajax({
				url: '/staff/index',
				method: 'GET',
				data: { search: searchTerm, page: 1, sorts: "Name,InternalCode" },
				contentType: 'application/json; charset=utf-8',
				success: function (data) {
					var newData = $('<tbody>').html(data).find('#table-body-staff').html();
					$('#table-body-staff').html(newData);

					var newPaginated = $('<div>').html(data).find('#paginated').html();
					$('#paginated').html(newPaginated);
				},
				error: function (xhr, textStatus, errorThrown) {
					toastr.error('Lỗi khi thực hiện tìm kiếm!', 'Thông báo');
				}
			});
		}
	});
</script>

@* Sắp xếp *@
<script>
	// $(document).ready(function () {
	// 	$("#tableSort").DataTable();
	// });
</script>

@* Phân trang *@
<script>
	$(document).ready(function () {
		$('.pagination a').on('click', function (e) {
			e.preventDefault();
			var page = $(this).data('page');
			paginatedResult(page);
		});
	});

	function paginatedResult(page) {
		$.ajax({
			url: `/staff/index?page=${page}`,
			method: 'GET',
			success: function (data) {
				var newData = $('<tbody>').html(data).find('#table-body-staff').html();
				$('#table-body-staff').html(newData);

				updatePagination(page);
			},
		});
	}

	function updatePagination(activePage) {
		$('.pageCurrent').removeClass('active');
		$('.pagination a[data-page="' + activePage + '"]').addClass('active').closest('.pageCurrent').addClass('active');
	}
</script>

@* Load giao diện và dữ liệu *@
<script>
	function resetButtonClick() {
		createOpen.addEventListener("click", function (event) {

			var rowData = {
				internalCode: "",
				name: "",
				dateOfBirth: "",
				gender: "",
				address: "",
				phone: "",
			};

			document.getElementById("modalTitle").innerText = "Thêm nhân viên mới";
			document.getElementById("createButton").style.display = "inline-block";
			document.getElementById("updateButton").style.display = "none";

			loadData(rowData);
		});

		updateOpens.forEach(function (button) {
			button.addEventListener("click", function () {
				var parentRow = button.closest("tr");
				var rowData = {
					id: parentRow.querySelector("td:nth-child(2)").textContent.trim(),
					internalCode: parentRow.querySelector("td:nth-child(3)").textContent.trim(),
					name: parentRow.querySelector("td:nth-child(4)").textContent.trim(),
					dateOfBirth: parentRow.querySelector("td:nth-child(5)").textContent.trim(),
					gender: parentRow.querySelector("td:nth-child(6)").textContent.trim(),
					address: parentRow.querySelector("td:nth-child(7)").textContent.trim(),
					phone: parentRow.querySelector("td:nth-child(8)").textContent.trim(),
				};

				document.getElementById("modalTitle").innerText = "Cập nhật thông tin nhân viên";
				document.getElementById("createButton").style.display = "none";
				document.getElementById("updateButton").style.display = "inline-block";

				loadData(rowData);
			});
		});



		$(document).ready(function () {
			$(".deletesStaff").on("click", function () {
				var itemId = $(this).closest("tr").find("td[data-id]").data("id");

				$.ajax({
					url: "/staff/delete?pId=" + itemId,
					method: "DELETE",
					success: function (data) {
						$.ajax({
							url: "/staff/index",
							method: "GET",
							data: { search: null, sorts: null, page: 1, pageSize: 30 },
							contentType: "application/json; charset=utf-8",
							success: function (data) {
								var newData = $('<tbody>').html(data).find('#table-body-staff').html();
								$('#table-body-staff').html(newData);

								var newPaginated = $('<div>').html(data).find('#paginated').html();
								$('#paginated').html(newPaginated);

								toastr.success('Xoá nhân viên thành công!', 'Thông báo');

								resetButtonClick();
							},
						});
					},
					error: function (xhr, textStatus, errorThrown) {
						toastr.error('Xoá nhân viên thất bại!', 'Thông báo');
					}
				});
			});
		});

		$(document).ready(function () {
			$(".deletesStaff").on("click", function () {
				var itemId = $(this).closest("tr").find("td[data-id]").data("id");

				$.ajax({
					url: "/staff/delete?pId=" + itemId,
					method: "DELETE",
					success: function (data) {
						$.ajax({
							url: "/staff/index",
							method: "GET",
							success: function (data) {
								var newData = $('<tbody>').html(data).find('#table-body-staff').html();
								$('#table-body-staff').html(newData);

								var newPaginated = $('<div>').html(data).find('#paginated').html();
								$('#paginated').html(newPaginated);

								resetButtonClick();
							},
						});

						toastr.success('Xoá nhân viên thành công!', 'Thông báo');
					},
					error: function (xhr, textStatus, errorThrown) {
						toastr.error('Xoá nhân viên thất bại!', 'Thông báo');
					}
				});
			});
		});
	}



	function loadData(data) {
		const dateParts = data.dateOfBirth.split('/');

		document.querySelector('input[name="id"]').value = data.id;
		document.querySelector('input[name="internalCode"]').value = data.internalCode;
		document.querySelector('input[name="name"]').value = data.name;
		document.querySelector('input[name="dateOfBirth"]').value = `${dateParts[2]}-${dateParts[1]}-${dateParts[0]}`;
		document.querySelector('select[name="gender"]').value = data.gender;
		document.querySelector('input[name="address"]').value = data.address;
		document.querySelector('input[name="phone"]').value = data.phone;

		removeValidator();
	}

	function removeValidator() {
		$(".text-danger").text("");

		internalCodeInput.removeClass("border-danger");
		nameInput.removeClass("border-danger");
		dateOfBirthInput.removeClass("border-danger");
		genderInput.removeClass("border-danger");
		addressInput.removeClass("border-danger");
		phoneInput.removeClass("border-danger");
	}

	resetButtonClick();
</script>

@* Gọi controller xử lý *@
<script>
	$(document).ready(function () {
		$("#createButton").on("click", function (e) {
			e.preventDefault();

			removeValidator();

			var pRequest = getData();
			pRequest.id = 0;

			var isValid = validateForm(pRequest);

			if (isValid) {
				$.ajax({
					url: "/staff/create",
					method: "POST",
					data: JSON.stringify(pRequest),
					contentType: "application/json; charset=utf-8",
					success: function (data) {
						if (data.success) {
							$.ajax({
								url: "/staff/index",
								method: "GET",
								data: { search: null, sorts: null, page: 1, pageSize: 30 },
								contentType: "application/json; charset=utf-8",
								success: function (data) {
									var newData = $('<tbody>').html(data).find('#table-body-staff').html();
									$('#table-body-staff').html(newData);

									var newPaginated = $('<div>').html(data).find('#paginated').html();
									$('#paginated').html(newPaginated);

									$('.btn-secondary[data-dismiss="modal"]').click();

									resetButtonClick();
								},
							});
							toastr.success('Thêm mới nhân viên thành công!', 'Thông báo');
						} else {
							toastr.error(data.errors[0], 'Thông báo');
						}
					},
					error: function (xhr, textStatus, errorThrown) {
						toastr.error('Thêm mới nhân viên thất bại!', 'Thông báo');
					}
				});
			}
		});

		$("#updateButton").on("click", function (e) {
			e.preventDefault();

			removeValidator();

			var pRequest = getData();

			var isValid = validateForm(pRequest);

			if (isValid) {
				$.ajax({
					url: "/staff/update",
					method: "PUT",
					data: JSON.stringify(pRequest),
					contentType: "application/json; charset=utf-8",
					success: function (data) {
						$.ajax({
							url: "/staff/index",
							method: "GET",
							data: { search: null, sorts: null, page: 1, pageSize: 30 },
							contentType: "application/json; charset=utf-8",
							success: function (data) {
								var newData = $('<tbody>').html(data).find('#table-body-staff').html();
								$('#table-body-staff').html(newData);

								$('.btn-secondary[data-dismiss="modal"]').click();

								toastr.success('Cập nhật thông tin nhân viên thành công!', 'Thông báo');

								resetButtonClick();
							},
						});
					},
					error: function (xhr, textStatus, errorThrown) {
						toastr.error('Cập nhật thông tin nhân viên thất bại!', 'Thông báo');
					}
				});
			}
		});
	});

	function getData() {
		var formData = {
			id: $('input[name="id"]').val() || null,
			internalCode: $('input[name="internalCode"]').val() || null,
			name: $('input[name="name"]').val() || null,
			dateOfBirth: $('input[name="dateOfBirth"]').val() || null,
			gender: $('select[name="gender"]').val() || null,
			address: $('input[name="address"]').val() || null,
			phone: $('input[name="phone"]').val() || null,
		};
		return formData;
	}

	function validateForm(data) {
		var isValid = true;

		// Validate internalCode
		if (!data.internalCode) {
			$("#internalCodeError").text("Mã nhân viên không được để trống");
			$('input[name="internalCode"]').addClass("border-danger");
			isValid = false;
		} else if (data.internalCode.length > 100) {
			$("#internalCodeError").text("Mã nhân viên không được vượt quá 100 ký tự.");
			$('input[name="internalCode"]').addClass("border-danger");
			isValid = false;
		}

		// Validate name
		if (!data.name) {
			$("#nameError").text("Tên nhân viên không được để trống");
			$('input[name="name"]').addClass("border-danger");
			isValid = false;
		} else if (data.name.length > 100) {
			$("#nameError").text("Tên nhân viên không được vượt quá 100 ký tự.");
			$('input[name="name"]').addClass("border-danger");
			isValid = false;
		}

		// Validate dateOfBirth
		if (!data.dateOfBirth) {
			$("#dateOfBirthError").text("Ngày sinh không được để trống");
			$('input[name="dateOfBirth"]').addClass("border-danger");
			isValid = false;
		} else {
			var birthDate = new Date(data.dateOfBirth);
			var currentDate = new Date();
			var age = currentDate.getFullYear() - birthDate.getFullYear();

			if (age < 18) {
				$("#dateOfBirthError").text("Nhân viên phải đủ 18 tuổi trở lên.");
				$('input[name="dateOfBirth"]').addClass("border-danger");
				isValid = false;
			}
		}

		// Validate gender
		if (!data.gender) {
			$("#genderError").text("Giới tính không được để trống");
			$('select[name="gender"]').addClass("border-danger");
			isValid = false;
		}

		// Validate address
		if (data.address && data.address.length > 300) {
			$("#addressError").text("Địa chỉ không được vượt quá 300 ký tự.");
			$('input[name="address"]').addClass("border-danger");
			isValid = false;
		}

		// Validate phone
		if (!data.phone && !/^\d{10,15}$/.test(data.phone)) {
			$("#phoneError").text("Số điện thoại không hợp lệ.");
			$('input[name="phone"]').addClass("border-danger");
			isValid = false;
		}

		return isValid;
	}

</script>